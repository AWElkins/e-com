{"ast":null,"code":"import _objectSpread from \"/Users/aaronelkins/Desktop/Coding/React/e-com/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/aaronelkins/Desktop/Coding/React/e-com/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport SweetAlert from 'sweetalert2-react';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { createStructuredSelector } from 'reselect';\nimport { selectedUserError } from '../../redux/user/user.selectors';\n\nconst SignUp = ({\n  userError,\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    error: '',\n    showError: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userDetails = _useState2[0],\n        setUserDetails = _useState2[1];\n\n  const displayName = userDetails.displayName,\n        email = userDetails.email,\n        password = userDetails.password,\n        confirmPassword = userDetails.confirmPassword,\n        error = userDetails.error,\n        showError = userDetails.showError;\n  useEffect(() => {\n    if (userError) {\n      setUserDetails(_objectSpread({}, userDetails, {\n        error: userError.message,\n        showError: true\n      }));\n    }\n  }, [userError]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword && !error.length) {\n      setUserDetails(_objectSpread({}, userDetails, {\n        error: \"Passwords do not match.\",\n        showError: true\n      }));\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setUserDetails(_objectSpread({}, userDetails, {\n      [name]: value,\n      error: '',\n      showError: false\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: 'sign-up',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: 'title',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Sign up with your e-mail and password\"), React.createElement(\"form\", {\n    className: 'sign-up-form',\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"E-mail\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"SIGN UP\")), error && React.createElement(SweetAlert, {\n    show: showError,\n    type: \"warning\",\n    title: \"Something went wrong!\",\n    text: error,\n    onConfirm: () => setUserDetails(_objectSpread({}, userDetails, {\n      error: '',\n      showError: false\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userError: selectedUserError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","useEffect","connect","SweetAlert","signUpStart","FormInput","CustomButton","createStructuredSelector","selectedUserError","SignUp","userError","displayName","email","password","confirmPassword","error","showError","userDetails","setUserDetails","message","handleSubmit","e","preventDefault","length","handleChange","target","value","name","mapStateToProps","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport SweetAlert from 'sweetalert2-react';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { createStructuredSelector } from 'reselect';\nimport { selectedUserError } from '../../redux/user/user.selectors';\n\nconst SignUp = ({ userError,signUpStart }) => {\n    const [userDetails, setUserDetails] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        error: '',\n        showError: false,\n    })\n\n    const { displayName, email, password, confirmPassword, error, showError } = userDetails;\n\n    useEffect(() => {\n        if(userError) {\n            setUserDetails({ ...userDetails, error: userError.message, showError: true });\n        }\n    } ,[userError])\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        if(password !== confirmPassword && !error.length) {\n            setUserDetails({ ...userDetails, error: \"Passwords do not match.\", showError: true });\n            return;\n        }\n        signUpStart({ displayName, email, password });\n    }\n\n    const handleChange = (e) => {\n        const { value, name } = e.target;\n        setUserDetails({ ...userDetails, [name]: value, error: '', showError: false })\n    }\n\n    \n\n    return (\n        <div className={ 'sign-up' } >\n            <h2 className={ 'title' }>I do not have a account</h2>\n            <span>Sign up with your e-mail and password</span>\n            <form className={ 'sign-up-form' } onSubmit={ handleSubmit }>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={ displayName }\n                    onChange={ handleChange }\n                    label='Display Name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={ email }\n                    onChange={ handleChange }\n                    label='E-mail'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={ password }\n                    onChange={ handleChange }\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={ confirmPassword }\n                    onChange={ handleChange }\n                    label='Confirm Password'\n                    required\n                />\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n\n            {\n                error &&\n                    <SweetAlert\n                        show={ showError }\n                        type='warning'\n                        title='Something went wrong!'\n                        text={ error }\n                        onConfirm={ () => setUserDetails({ ...userDetails, error: '', showError: false }) }\n                    />\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = createStructuredSelector({\n    userError: selectedUserError,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}