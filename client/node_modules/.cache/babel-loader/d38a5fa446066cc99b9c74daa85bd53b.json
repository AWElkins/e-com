{"ast":null,"code":"var _jsxFileName = \"/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/sign-up/sign-up.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SweetAlert from 'sweetalert2-react';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { createStructuredSelector } from 'reselect';\nimport { selectedUserError } from '../../redux/user/user.selectors';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert('Passwords do not match');\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: ''\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    const userError = nextProps.userError;\n\n    if (userError) {\n      this.setState({\n        error: userError.message\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword,\n          error = _this$state2.error;\n    const userError = this.props.userError;\n    return React.createElement(\"div\", {\n      className: 'sign-up',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: 'title',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"I do not have a account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign up with your e-mail and password\"), React.createElement(\"form\", {\n      className: 'sign-up-form',\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: e => this.handleChange(e, 'displayName'),\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: e => this.handleChange(e, 'email'),\n      label: \"E-mail\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: e => this.handleChange(e, 'password'),\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: e => this.handleChange(e, 'confirmPassword'),\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"SIGN UP\")), error && React.createElement(SweetAlert, {\n      show: error,\n      type: \"warning\",\n      title: \"Something went wrong!\",\n      text: userError,\n      onConfirm: () => this.setState({\n        error: ''\n      }, this.setState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  userError: selectedUserError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","connect","SweetAlert","signUpStart","FormInput","CustomButton","createStructuredSelector","selectedUserError","SignUp","constructor","props","handleSubmit","e","preventDefault","state","displayName","email","password","confirmPassword","alert","handleChange","type","setState","target","value","error","componentWillReceiveProps","nextProps","nextContext","userError","message","render","mapStateToProps","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SweetAlert from 'sweetalert2-react';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { createStructuredSelector } from 'reselect';\nimport { selectedUserError } from '../../redux/user/user.selectors';\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            error: '',\n        }\n    }\n\n    componentWillReceiveProps(nextProps,nextContext) {\n        const { userError } = nextProps;\n\n        if(userError) {\n            this.setState({ error: userError.message });\n        }\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        const { signUpStart } = this.props;\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        if(password !== confirmPassword) {\n            alert('Passwords do not match');\n            return;\n        }\n\n        signUpStart({ displayName, email, password });\n    }\n\n    handleChange = (e,type) => {\n        this.setState({ [type]: e.target.value })\n    }\n\n    render() {\n        const { displayName, email, password, confirmPassword, error } = this.state;\n        const { userError } = this.props;\n\n        return (\n            <div className={ 'sign-up' } >\n                <h2 className={ 'title' }>I do not have a account</h2>\n                <span>Sign up with your e-mail and password</span>\n                <form className={ 'sign-up-form' } onSubmit={ this.handleSubmit }>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={ displayName }\n                        onChange={ (e) => this.handleChange(e,'displayName') }\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={ email }\n                        onChange={ (e) => this.handleChange(e,'email') }\n                        label='E-mail'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={ password }\n                        onChange={ (e) => this.handleChange(e,'password') }\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={ confirmPassword }\n                        onChange={ (e) => this.handleChange(e,'confirmPassword') }\n                        label='Confirm Password'\n                        required\n                    />\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n\n                {\n                    error &&\n                        <SweetAlert\n                            show={ error }\n                            type='warning'\n                            title='Something went wrong!'\n                            text={ userError }\n                            onConfirm={ () => this.setState({ error: '', },\n                                              this.setState({\n                                                displayName: '',\n                                                email: '',\n                                                password: '',\n                                                confirmPassword: '',\n                                              })) \n                            }\n                        />\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    userError: selectedUserError,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}