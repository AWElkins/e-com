{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = covertCollectionsSnapshotToMap(snapshot);\n      fetchCollectionsSuccess(collectionMap);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/aaronelkins/Desktop/Coding/React/e-com/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","covertCollectionsSnapshotToMap","fetchCollectionsStart","type","UPDATE_COLLECTIONS","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,aAAa,KAAK;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMG,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAEAS,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AAClC,YAAMT,aAAa,GAAGL,8BAA8B,CAACc,QAAD,CAApD;AACAV,MAAAA,uBAAuB,CAACC,aAAD,CAAvB;AACH,KAHD;AAIH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.UPDATE_COLLECTIONS,\n});\n\nexport const fetchCollectionsSuccess = collectionMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionMap,\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then( snapshot => {\n            const collectionMap = covertCollectionsSnapshotToMap(snapshot);\n            fetchCollectionsSuccess(collectionMap);\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}