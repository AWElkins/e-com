{"ast":null,"code":"var _jsxFileName = \"/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport './sign-in.styles.scss';\nimport { connect } from 'react-redux';\nimport { auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: 'sign-in',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      handleChange: e => this.handleChange(e, 'email'),\n      label: \"E-Mail\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      handleChange: e => this.handleChange(e, 'password'),\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'buttons',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"SIGN IN\"), React.createElement(CustomButton, {\n      type: \"button\",\n      isGoogleSignIn: true,\n      onClick: googleSignInStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"SIGN IN WITH GOOGLE\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","auth","googleSignInStart","FormInput","CustomButton","SignIn","constructor","props","handleSubmit","e","preventDefault","state","email","password","signInWithEmailAndPassword","setState","err","console","log","handleChange","type","target","value","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './sign-in.styles.scss';\nimport { connect } from 'react-redux';\nimport { auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component';\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n        }\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault();\n        const { email, password } = this.state;\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            this.setState({ email: '', password: '' });\n        } catch (err) {\n            console.log(err);\n        }\n        \n    }\n\n    handleChange = (e,type) => {\n        this.setState({ [type]: e.target.value })\n    }\n\n    render() {\n        const { email, password } = this.state;\n        const { googleSignInStart } = this.props;\n\n        return (\n            <div className={ 'sign-in' }>\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={ this.handleSubmit }>\n                    <FormInput \n                        name='email'\n                        type='email'\n                        value={ email }\n                        handleChange={ (e) => this.handleChange(e,'email') }\n                        label='E-Mail'\n                        required\n                    />\n                    <FormInput \n                        name='password'\n                        type='password'\n                        value={ password }\n                        handleChange={ (e) => this.handleChange(e,'password') }\n                        label='Password'\n                        required\n                    />\n                    <div className={ 'buttons' }>\n                        <CustomButton type=\"submit\">SIGN IN</CustomButton>\n                        <CustomButton\n                            type='button'\n                            isGoogleSignIn\n                            onClick={ googleSignInStart }\n                        >\n                            SIGN IN WITH GOOGLE\n                        </CustomButton>\n                    </div>\n                    \n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n})\n\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}