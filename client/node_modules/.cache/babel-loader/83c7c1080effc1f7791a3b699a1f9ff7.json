{"ast":null,"code":"var _jsxFileName = \"/Users/aaronelkins/Desktop/Coding/React/e-com/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { Route } from 'react-router-dom';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = await covertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap); // this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/aaronelkins/Desktop/Coding/React/e-com/src/pages/shop/shop.component.jsx"],"names":["React","Component","connect","updateCollections","Route","firestore","covertCollectionsSnapshotToMap","WithSpinner","CollectionOverview","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","constructor","props","unsubscribeFromSnapshot","state","loading","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionMap","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBX,SAAvB,CAAiC;AAC7BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAOnBC,uBAPmB,GAOO,IAPP;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAIDC,EAAAA,iBAAiB,GAAG;AAAA,UACRf,iBADQ,GACc,KAAKW,KADnB,CACRX,iBADQ;AAEhB,UAAMgB,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKL,uBAAL,GAA+BI,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE,YAAMC,aAAa,GAAG,MAAMjB,8BAA8B,CAACgB,QAAD,CAA1D;AACAnB,MAAAA,iBAAiB,CAACoB,aAAD,CAAjB,CAFsE,CAGtE;AACH,KAJ8B,CAA/B;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKX,KADlB,CACGW,KADH;AAAA,UAEGR,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAIL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKQ,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGZ,KAAK,IAAI,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAGG;AAA3C,SAA0DH,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKW,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGZ,KAAK,IAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAGG;AAAvC,SAAsDH,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA/B4B;;AAkCjC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCzB,EAAAA,iBAAiB,EAAE0B,cAAc,IAAID,QAAQ,CAACzB,iBAAiB,CAAC0B,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAe3B,OAAO,CAAC,IAAD,EAAMyB,kBAAN,CAAP,CAAiCf,QAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { Route } from 'react-router-dom';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        }\n    }\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collections');\n\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            const collectionMap = await covertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionMap);\n            // this.setState({ loading: false });\n        })\n    }\n\n    render() {\n        const { match } = this.props;\n        const { loading } = this.state;\n\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render={ props => <CollectionOverviewWithSpinner isLoading={ loading } { ...props } /> } />\n                <Route path={`${match.path}/:collectionId`} render={ props => <CollectionPageWithSpinner isLoading={ loading } { ...props } /> } />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}