{"ast":null,"code":"var _jsxFileName = \"/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/sign-up/sign-up.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert('Passwords do not match');\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: 'sign-up',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: 'title',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"I do not have a account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Sign up with your e-mail and password\"), React.createElement(\"form\", {\n      className: 'sign-up-form',\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: e => this.handleChange(e, 'displayName'),\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: e => this.handleChange(e, 'email'),\n      label: \"E-mail\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: e => this.handleChange(e, 'password'),\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: e => this.handleChange(e, 'confirmPassword'),\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","connect","signUpStart","FormInput","CustomButton","SignUp","constructor","props","handleSubmit","e","preventDefault","state","displayName","email","password","confirmPassword","alert","handleChange","type","setState","target","value","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n        }\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        const { signUpStart } = this.props;\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        if(password !== confirmPassword) {\n            alert('Passwords do not match');\n            return;\n        }\n\n        signUpStart({ displayName, email, password });\n    }\n\n    handleChange = (e,type) => {\n        this.setState({ [type]: e.target.value })\n    }\n\n    render() {\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        return (\n            <div className={ 'sign-up' } >\n                <h2 className={ 'title' }>I do not have a account</h2>\n                <span>Sign up with your e-mail and password</span>\n                <form className={ 'sign-up-form' } onSubmit={ this.handleSubmit }>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={ displayName }\n                        onChange={ (e) => this.handleChange(e,'displayName') }\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={ email }\n                        onChange={ (e) => this.handleChange(e,'email') }\n                        label='E-mail'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={ password }\n                        onChange={ (e) => this.handleChange(e,'password') }\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={ confirmPassword }\n                        onChange={ (e) => this.handleChange(e,'confirmPassword') }\n                        label='Confirm Password'\n                        required\n                    />\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}