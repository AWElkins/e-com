{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    console.log(firebase);\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = covertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(err => dispatch(fetchCollectionsFailure(err.message)));\n  };\n};","map":{"version":3,"sources":["/Users/aaronelkins/Desktop/Coding/React/e-com/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","covertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","console","log","firebase","collectionRef","collection","get","then","snapshot","catch","err","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,aAAa,KAAK;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,UAAU,KAAK;AAClDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD4B;AAElDH,EAAAA,OAAO,EAAEE;AAFyC,CAAL,CAA1C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,UAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqB,aAArB,CAAtB;AACAL,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAe,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AAClC,YAAMf,aAAa,GAAGL,8BAA8B,CAACoB,QAAD,CAApD;AACAR,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AACH,KAHD,EAGGgB,KAHH,CAGUC,GAAG,IAAIV,QAAQ,CAACJ,uBAAuB,CAACc,GAAG,CAACC,OAAL,CAAxB,CAHzB;AAIH,GATD;AAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = collectionMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionMap,\n})\n\nexport const fetchCollectionsFailure = errMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errMessage,\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        console.log(firebase);\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then( snapshot => {\n            const collectionMap = covertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionMap));\n        }).catch( err => dispatch(fetchCollectionsFailure(err.message)))\n    }\n}"]},"metadata":{},"sourceType":"module"}