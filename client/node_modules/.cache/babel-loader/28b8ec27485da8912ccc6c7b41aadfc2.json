{"ast":null,"code":"var _jsxFileName = \"/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { toogleCartHidden } from '../../redux/cart/cart.actions';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.componet';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport './cart-dropdown.styles.scss';\n\nconst Cart = ({\n  cartItems,\n  history,\n  dispatch\n}) => {\n  return React.createElement(\"div\", {\n    className: 'cart-dropdown',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'cart-items',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(cartItem => {\n    return React.createElement(CartItem, {\n      key: cartItem.id,\n      item: cartItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }) : React.createElement(\"span\", {\n    className: 'empty-message',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Your cart is empty\")), React.createElement(CustomButton, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toogleCartHidden());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"GO TO CHECKOUT\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps, null)(Cart));","map":{"version":3,"sources":["/Users/aaronelkins/Desktop/Coding/React/e-com/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","toogleCartHidden","CustomButton","CartItem","selectCartItems","createStructuredSelector","withRouter","Cart","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,6BAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AAC/C,SACI;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,SAAS,CAACG,MAAV,GACIH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAAI;AACtB,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAGA,QAAQ,CAACC,EAAzB;AAA8B,MAAA,IAAI,EAAGD,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CADJ,GAOA;AAAM,IAAA,SAAS,EAAG,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATR,CADJ,EAaI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAG,MAAM;AAAEJ,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AAA2BL,MAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AAA6B,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ,CADJ;AAiBH,CAlBD;;AAoBA,MAAMe,eAAe,GAAGX,wBAAwB,CAAC;AAC7CG,EAAAA,SAAS,EAAEJ;AADkC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACN,OAAO,CAACgB,eAAD,EAAiB,IAAjB,CAAP,CAA8BT,IAA9B,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { toogleCartHidden } from '../../redux/cart/cart.actions';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.componet';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport './cart-dropdown.styles.scss';\n\nconst Cart = ({ cartItems, history, dispatch }) => {\n    return (\n        <div className={ 'cart-dropdown' }>\n            <div className={ 'cart-items' }>\n                {\n                    cartItems.length ? (\n                        cartItems.map(cartItem => {\n                            return <CartItem key={ cartItem.id } item={ cartItem} />\n                        })\n                    )\n                    :\n                    \n                    <span className={ 'empty-message'}>Your cart is empty</span>\n                }\n            </div>\n            <CustomButton onClick={ () => { history.push('/checkout'); dispatch(toogleCartHidden())} }>GO TO CHECKOUT</CustomButton>\n        </div>\n    )\n}\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems,\n})\n\nexport default withRouter(connect(mapStateToProps,null)(Cart));"]},"metadata":{},"sourceType":"module"}